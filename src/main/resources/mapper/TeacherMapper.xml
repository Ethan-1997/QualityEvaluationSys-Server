<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qualityevaluationsys.demo.dao.TeacherMapper">
  <resultMap id="BaseResultMap" type="com.qualityevaluationsys.demo.domain.Teacher">
    <id column="Tno" jdbcType="INTEGER" property="tno" />
    <result column="Tname" jdbcType="VARCHAR" property="tname" />
    <result column="Ttime" jdbcType="VARCHAR" property="ttime" />
    <result column="TIntroduce" jdbcType="VARCHAR" property="tintroduce" />
    <result column="Tsex" jdbcType="CHAR" property="tsex" />
    <result column="Twage" jdbcType="REAL" property="twage" />
    <result column="Cid" jdbcType="INTEGER" property="cid" />
    <result column="Uno" jdbcType="INTEGER" property="uno" />
    <result column="Ttel" jdbcType="VARCHAR" property="ttel" />
    <result column="Cname" jdbcType="VARCHAR" property="cname" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    Tno, Tname, Ttime, TIntroduce, Tsex, Twage, Cid, Uno, Ttel, Cname
  </sql>
  <select id="selectByExample" parameterType="com.qualityevaluationsys.demo.domain.TeacherExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from Teacher
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from Teacher
    where Tno = #{tno,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from Teacher
    where Tno = #{tno,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.qualityevaluationsys.demo.domain.TeacherExample">
    delete from Teacher
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.qualityevaluationsys.demo.domain.Teacher">
    insert into Teacher (Tno, Tname, Ttime, 
      TIntroduce, Tsex, Twage, 
      Cid, Uno, Ttel, Cname
      )
    values (#{tno,jdbcType=INTEGER}, #{tname,jdbcType=VARCHAR}, #{ttime,jdbcType=VARCHAR}, 
      #{tintroduce,jdbcType=VARCHAR}, #{tsex,jdbcType=CHAR}, #{twage,jdbcType=REAL}, 
      #{cid,jdbcType=INTEGER}, #{uno,jdbcType=INTEGER}, #{ttel,jdbcType=VARCHAR}, #{cname,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.qualityevaluationsys.demo.domain.Teacher">
    insert into Teacher
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="tno != null">
        Tno,
      </if>
      <if test="tname != null">
        Tname,
      </if>
      <if test="ttime != null">
        Ttime,
      </if>
      <if test="tintroduce != null">
        TIntroduce,
      </if>
      <if test="tsex != null">
        Tsex,
      </if>
      <if test="twage != null">
        Twage,
      </if>
      <if test="cid != null">
        Cid,
      </if>
      <if test="uno != null">
        Uno,
      </if>
      <if test="ttel != null">
        Ttel,
      </if>
      <if test="cname != null">
        Cname,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="tno != null">
        #{tno,jdbcType=INTEGER},
      </if>
      <if test="tname != null">
        #{tname,jdbcType=VARCHAR},
      </if>
      <if test="ttime != null">
        #{ttime,jdbcType=VARCHAR},
      </if>
      <if test="tintroduce != null">
        #{tintroduce,jdbcType=VARCHAR},
      </if>
      <if test="tsex != null">
        #{tsex,jdbcType=CHAR},
      </if>
      <if test="twage != null">
        #{twage,jdbcType=REAL},
      </if>
      <if test="cid != null">
        #{cid,jdbcType=INTEGER},
      </if>
      <if test="uno != null">
        #{uno,jdbcType=INTEGER},
      </if>
      <if test="ttel != null">
        #{ttel,jdbcType=VARCHAR},
      </if>
      <if test="cname != null">
        #{cname,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.qualityevaluationsys.demo.domain.TeacherExample" resultType="java.lang.Long">
    select count(*) from Teacher
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update Teacher
    <set>
      <if test="record.tno != null">
        Tno = #{record.tno,jdbcType=INTEGER},
      </if>
      <if test="record.tname != null">
        Tname = #{record.tname,jdbcType=VARCHAR},
      </if>
      <if test="record.ttime != null">
        Ttime = #{record.ttime,jdbcType=VARCHAR},
      </if>
      <if test="record.tintroduce != null">
        TIntroduce = #{record.tintroduce,jdbcType=VARCHAR},
      </if>
      <if test="record.tsex != null">
        Tsex = #{record.tsex,jdbcType=CHAR},
      </if>
      <if test="record.twage != null">
        Twage = #{record.twage,jdbcType=REAL},
      </if>
      <if test="record.cid != null">
        Cid = #{record.cid,jdbcType=INTEGER},
      </if>
      <if test="record.uno != null">
        Uno = #{record.uno,jdbcType=INTEGER},
      </if>
      <if test="record.ttel != null">
        Ttel = #{record.ttel,jdbcType=VARCHAR},
      </if>
      <if test="record.cname != null">
        Cname = #{record.cname,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update Teacher
    set Tno = #{record.tno,jdbcType=INTEGER},
      Tname = #{record.tname,jdbcType=VARCHAR},
      Ttime = #{record.ttime,jdbcType=VARCHAR},
      TIntroduce = #{record.tintroduce,jdbcType=VARCHAR},
      Tsex = #{record.tsex,jdbcType=CHAR},
      Twage = #{record.twage,jdbcType=REAL},
      Cid = #{record.cid,jdbcType=INTEGER},
      Uno = #{record.uno,jdbcType=INTEGER},
      Ttel = #{record.ttel,jdbcType=VARCHAR},
      Cname = #{record.cname,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.qualityevaluationsys.demo.domain.Teacher">
    update Teacher
    <set>
      <if test="tname != null">
        Tname = #{tname,jdbcType=VARCHAR},
      </if>
      <if test="ttime != null">
        Ttime = #{ttime,jdbcType=VARCHAR},
      </if>
      <if test="tintroduce != null">
        TIntroduce = #{tintroduce,jdbcType=VARCHAR},
      </if>
      <if test="tsex != null">
        Tsex = #{tsex,jdbcType=CHAR},
      </if>
      <if test="twage != null">
        Twage = #{twage,jdbcType=REAL},
      </if>
      <if test="cid != null">
        Cid = #{cid,jdbcType=INTEGER},
      </if>
      <if test="uno != null">
        Uno = #{uno,jdbcType=INTEGER},
      </if>
      <if test="ttel != null">
        Ttel = #{ttel,jdbcType=VARCHAR},
      </if>
      <if test="cname != null">
        Cname = #{cname,jdbcType=VARCHAR},
      </if>
    </set>
    where Tno = #{tno,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qualityevaluationsys.demo.domain.Teacher">
    update Teacher
    set Tname = #{tname,jdbcType=VARCHAR},
      Ttime = #{ttime,jdbcType=VARCHAR},
      TIntroduce = #{tintroduce,jdbcType=VARCHAR},
      Tsex = #{tsex,jdbcType=CHAR},
      Twage = #{twage,jdbcType=REAL},
      Cid = #{cid,jdbcType=INTEGER},
      Uno = #{uno,jdbcType=INTEGER},
      Ttel = #{ttel,jdbcType=VARCHAR},
      Cname = #{cname,jdbcType=VARCHAR}
    where Tno = #{tno,jdbcType=INTEGER}
  </update>
</mapper>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qualityevaluationsys.demo.dao.HighLightingMapper">
  <resultMap id="BaseResultMap" type="com.qualityevaluationsys.demo.domain.HighLighting">
    <id column="Hid" jdbcType="INTEGER" property="hid" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="time" jdbcType="VARCHAR" property="time" />
    <result column="sid" jdbcType="VARCHAR" property="sid" />
    <result column="sname" jdbcType="VARCHAR" property="sname" />
    <result column="sclass" jdbcType="VARCHAR" property="sclass" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    Hid, title, time, sid, sname, sclass
  </sql>
  <select id="selectByExample" parameterType="com.qualityevaluationsys.demo.domain.HighLightingExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from HighLighting
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from HighLighting
    where Hid = #{hid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from HighLighting
    where Hid = #{hid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.qualityevaluationsys.demo.domain.HighLightingExample">
    delete from HighLighting
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.qualityevaluationsys.demo.domain.HighLighting">
    insert into HighLighting (Hid, title, time, 
      sid, sname, sclass)
    values (#{hid,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{time,jdbcType=VARCHAR}, 
      #{sid,jdbcType=VARCHAR}, #{sname,jdbcType=VARCHAR}, #{sclass,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.qualityevaluationsys.demo.domain.HighLighting">
    insert into HighLighting
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="hid != null">
        Hid,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="time != null">
        time,
      </if>
      <if test="sid != null">
        sid,
      </if>
      <if test="sname != null">
        sname,
      </if>
      <if test="sclass != null">
        sclass,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="hid != null">
        #{hid,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="time != null">
        #{time,jdbcType=VARCHAR},
      </if>
      <if test="sid != null">
        #{sid,jdbcType=VARCHAR},
      </if>
      <if test="sname != null">
        #{sname,jdbcType=VARCHAR},
      </if>
      <if test="sclass != null">
        #{sclass,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.qualityevaluationsys.demo.domain.HighLightingExample" resultType="java.lang.Long">
    select count(*) from HighLighting
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update HighLighting
    <set>
      <if test="record.hid != null">
        Hid = #{record.hid,jdbcType=INTEGER},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.time != null">
        time = #{record.time,jdbcType=VARCHAR},
      </if>
      <if test="record.sid != null">
        sid = #{record.sid,jdbcType=VARCHAR},
      </if>
      <if test="record.sname != null">
        sname = #{record.sname,jdbcType=VARCHAR},
      </if>
      <if test="record.sclass != null">
        sclass = #{record.sclass,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update HighLighting
    set Hid = #{record.hid,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      time = #{record.time,jdbcType=VARCHAR},
      sid = #{record.sid,jdbcType=VARCHAR},
      sname = #{record.sname,jdbcType=VARCHAR},
      sclass = #{record.sclass,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.qualityevaluationsys.demo.domain.HighLighting">
    update HighLighting
    <set>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="time != null">
        time = #{time,jdbcType=VARCHAR},
      </if>
      <if test="sid != null">
        sid = #{sid,jdbcType=VARCHAR},
      </if>
      <if test="sname != null">
        sname = #{sname,jdbcType=VARCHAR},
      </if>
      <if test="sclass != null">
        sclass = #{sclass,jdbcType=VARCHAR},
      </if>
    </set>
    where Hid = #{hid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qualityevaluationsys.demo.domain.HighLighting">
    update HighLighting
    set title = #{title,jdbcType=VARCHAR},
      time = #{time,jdbcType=VARCHAR},
      sid = #{sid,jdbcType=VARCHAR},
      sname = #{sname,jdbcType=VARCHAR},
      sclass = #{sclass,jdbcType=VARCHAR}
    where Hid = #{hid,jdbcType=INTEGER}
  </update>
</mapper>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qualityevaluationsys.demo.dao.StudentTestMapper">
  <resultMap id="BaseResultMap" type="com.qualityevaluationsys.demo.domain.StudentTest">
    <result column="Tid" jdbcType="VARCHAR" property="tid" />
    <result column="Sid" jdbcType="VARCHAR" property="sid" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="date" jdbcType="VARCHAR" property="date" />
    <result column="grade" jdbcType="INTEGER" property="grade" />
    <result column="radio" jdbcType="VARCHAR" property="radio" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.qualityevaluationsys.demo.domain.StudentTest">
    <result column="state" jdbcType="LONGVARBINARY" property="state" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    Tid, Sid, name, date, grade, radio
  </sql>
  <sql id="Blob_Column_List">
    state
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.qualityevaluationsys.demo.domain.StudentTestExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from StudentTest
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.qualityevaluationsys.demo.domain.StudentTestExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from StudentTest
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.qualityevaluationsys.demo.domain.StudentTestExample">
    delete from StudentTest
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.qualityevaluationsys.demo.domain.StudentTest">
    insert into StudentTest (Tid, Sid, name, 
      date, grade, radio, 
      state)
    values (#{tid,jdbcType=VARCHAR}, #{sid,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{date,jdbcType=VARCHAR}, #{grade,jdbcType=INTEGER}, #{radio,jdbcType=VARCHAR}, 
      #{state,jdbcType=LONGVARBINARY})
  </insert>
  <insert id="insertSelective" parameterType="com.qualityevaluationsys.demo.domain.StudentTest">
    insert into StudentTest
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="tid != null">
        Tid,
      </if>
      <if test="sid != null">
        Sid,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="date != null">
        date,
      </if>
      <if test="grade != null">
        grade,
      </if>
      <if test="radio != null">
        radio,
      </if>
      <if test="state != null">
        state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="tid != null">
        #{tid,jdbcType=VARCHAR},
      </if>
      <if test="sid != null">
        #{sid,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="date != null">
        #{date,jdbcType=VARCHAR},
      </if>
      <if test="grade != null">
        #{grade,jdbcType=INTEGER},
      </if>
      <if test="radio != null">
        #{radio,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.qualityevaluationsys.demo.domain.StudentTestExample" resultType="java.lang.Long">
    select count(*) from StudentTest
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update StudentTest
    <set>
      <if test="record.tid != null">
        Tid = #{record.tid,jdbcType=VARCHAR},
      </if>
      <if test="record.sid != null">
        Sid = #{record.sid,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.date != null">
        date = #{record.date,jdbcType=VARCHAR},
      </if>
      <if test="record.grade != null">
        grade = #{record.grade,jdbcType=INTEGER},
      </if>
      <if test="record.radio != null">
        radio = #{record.radio,jdbcType=VARCHAR},
      </if>
      <if test="record.state != null">
        state = #{record.state,jdbcType=LONGVARBINARY},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update StudentTest
    set Tid = #{record.tid,jdbcType=VARCHAR},
      Sid = #{record.sid,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      date = #{record.date,jdbcType=VARCHAR},
      grade = #{record.grade,jdbcType=INTEGER},
      radio = #{record.radio,jdbcType=VARCHAR},
      state = #{record.state,jdbcType=LONGVARBINARY}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update StudentTest
    set Tid = #{record.tid,jdbcType=VARCHAR},
      Sid = #{record.sid,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      date = #{record.date,jdbcType=VARCHAR},
      grade = #{record.grade,jdbcType=INTEGER},
      radio = #{record.radio,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>
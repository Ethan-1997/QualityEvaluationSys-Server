<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qualityevaluationsys.demo.dao.StudentTestMapper">
  <resultMap id="BaseResultMap" type="com.qualityevaluationsys.demo.domain.StudentTest">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="Tid" jdbcType="VARCHAR" property="tid" />
    <result column="Sid" jdbcType="VARCHAR" property="sid" />
    <result column="Tname" jdbcType="VARCHAR" property="tname" />
    <result column="Tdate" jdbcType="VARCHAR" property="tdate" />
    <result column="Sstate" jdbcType="VARCHAR" property="sstate" />
    <result column="Sgrade" jdbcType="INTEGER" property="sgrade" />
    <result column="Ttype" jdbcType="VARCHAR" property="ttype" />
    <result column="display" jdbcType="TINYINT" property="display" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, Tid, Sid, Tname, Tdate, Sstate, Sgrade, Ttype, display
  </sql>
  <select id="selectByExample" parameterType="com.qualityevaluationsys.demo.domain.StudentTestExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from StudentTest
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from StudentTest
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from StudentTest
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.qualityevaluationsys.demo.domain.StudentTestExample">
    delete from StudentTest
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.qualityevaluationsys.demo.domain.StudentTest">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into StudentTest (Tid, Sid, Tname, 
      Tdate, Sstate, Sgrade, 
      Ttype, display)
    values (#{tid,jdbcType=VARCHAR}, #{sid,jdbcType=VARCHAR}, #{tname,jdbcType=VARCHAR}, 
      #{tdate,jdbcType=VARCHAR}, #{sstate,jdbcType=VARCHAR}, #{sgrade,jdbcType=INTEGER}, 
      #{ttype,jdbcType=VARCHAR}, #{display,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="com.qualityevaluationsys.demo.domain.StudentTest">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into StudentTest
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="tid != null">
        Tid,
      </if>
      <if test="sid != null">
        Sid,
      </if>
      <if test="tname != null">
        Tname,
      </if>
      <if test="tdate != null">
        Tdate,
      </if>
      <if test="sstate != null">
        Sstate,
      </if>
      <if test="sgrade != null">
        Sgrade,
      </if>
      <if test="ttype != null">
        Ttype,
      </if>
      <if test="display != null">
        display,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="tid != null">
        #{tid,jdbcType=VARCHAR},
      </if>
      <if test="sid != null">
        #{sid,jdbcType=VARCHAR},
      </if>
      <if test="tname != null">
        #{tname,jdbcType=VARCHAR},
      </if>
      <if test="tdate != null">
        #{tdate,jdbcType=VARCHAR},
      </if>
      <if test="sstate != null">
        #{sstate,jdbcType=VARCHAR},
      </if>
      <if test="sgrade != null">
        #{sgrade,jdbcType=INTEGER},
      </if>
      <if test="ttype != null">
        #{ttype,jdbcType=VARCHAR},
      </if>
      <if test="display != null">
        #{display,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.qualityevaluationsys.demo.domain.StudentTestExample" resultType="java.lang.Long">
    select count(*) from StudentTest
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update StudentTest
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.tid != null">
        Tid = #{record.tid,jdbcType=VARCHAR},
      </if>
      <if test="record.sid != null">
        Sid = #{record.sid,jdbcType=VARCHAR},
      </if>
      <if test="record.tname != null">
        Tname = #{record.tname,jdbcType=VARCHAR},
      </if>
      <if test="record.tdate != null">
        Tdate = #{record.tdate,jdbcType=VARCHAR},
      </if>
      <if test="record.sstate != null">
        Sstate = #{record.sstate,jdbcType=VARCHAR},
      </if>
      <if test="record.sgrade != null">
        Sgrade = #{record.sgrade,jdbcType=INTEGER},
      </if>
      <if test="record.ttype != null">
        Ttype = #{record.ttype,jdbcType=VARCHAR},
      </if>
      <if test="record.display != null">
        display = #{record.display,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update StudentTest
    set id = #{record.id,jdbcType=INTEGER},
      Tid = #{record.tid,jdbcType=VARCHAR},
      Sid = #{record.sid,jdbcType=VARCHAR},
      Tname = #{record.tname,jdbcType=VARCHAR},
      Tdate = #{record.tdate,jdbcType=VARCHAR},
      Sstate = #{record.sstate,jdbcType=VARCHAR},
      Sgrade = #{record.sgrade,jdbcType=INTEGER},
      Ttype = #{record.ttype,jdbcType=VARCHAR},
      display = #{record.display,jdbcType=TINYINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.qualityevaluationsys.demo.domain.StudentTest">
    update StudentTest
    <set>
      <if test="tid != null">
        Tid = #{tid,jdbcType=VARCHAR},
      </if>
      <if test="sid != null">
        Sid = #{sid,jdbcType=VARCHAR},
      </if>
      <if test="tname != null">
        Tname = #{tname,jdbcType=VARCHAR},
      </if>
      <if test="tdate != null">
        Tdate = #{tdate,jdbcType=VARCHAR},
      </if>
      <if test="sstate != null">
        Sstate = #{sstate,jdbcType=VARCHAR},
      </if>
      <if test="sgrade != null">
        Sgrade = #{sgrade,jdbcType=INTEGER},
      </if>
      <if test="ttype != null">
        Ttype = #{ttype,jdbcType=VARCHAR},
      </if>
      <if test="display != null">
        display = #{display,jdbcType=TINYINT},
      </if>
    </set>
    where Sid = #{sid,jdbcType=VARCHAR} AND Tid = #{tid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qualityevaluationsys.demo.domain.StudentTest">
    update StudentTest
    set Tid = #{tid,jdbcType=VARCHAR},
      Sid = #{sid,jdbcType=VARCHAR},
      Tname = #{tname,jdbcType=VARCHAR},
      Tdate = #{tdate,jdbcType=VARCHAR},
      Sstate = #{sstate,jdbcType=VARCHAR},
      Sgrade = #{sgrade,jdbcType=INTEGER},
      Ttype = #{ttype,jdbcType=VARCHAR},
      display = #{display,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <update id="updateByTidAndSid">
    update StudentTest
    set display = #{status,jdbcType=TINYINT}
    where Sid = #{sid,jdbcType=VARCHAR} AND  Tid = #{tid,jdbcType=VARCHAR}
  </update>
</mapper>
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.qualityevaluationsys.demo.dao.SysuserMapper" >
  <resultMap id="BaseResultMap" type="com.qualityevaluationsys.demo.domain.Sysuser" >
    <id column="Uno" property="uno" jdbcType="INTEGER" />
    <result column="Uname" property="uname" jdbcType="VARCHAR" />
    <result column="Upassword" property="upassword" jdbcType="VARCHAR" />
    <result column="Utype" property="utype" jdbcType="VARCHAR" />
    <result column="Gid" property="gid" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    Uno, Uname, Upassword, Utype, Gid
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.qualityevaluationsys.demo.domain.SysuserExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from SysUser
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from SysUser
    where Uno = #{uno,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from SysUser
    where Uno = #{uno,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.qualityevaluationsys.demo.domain.SysuserExample" >
    delete from SysUser
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.qualityevaluationsys.demo.domain.Sysuser" >
    insert into SysUser (Uno, Uname, Upassword, 
      Utype, Gid)
    values (#{uno,jdbcType=INTEGER}, #{uname,jdbcType=VARCHAR}, #{upassword,jdbcType=VARCHAR}, 
      #{utype,jdbcType=VARCHAR}, #{gid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.qualityevaluationsys.demo.domain.Sysuser" >
    insert into SysUser
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="uno != null" >
        Uno,
      </if>
      <if test="uname != null" >
        Uname,
      </if>
      <if test="upassword != null" >
        Upassword,
      </if>
      <if test="utype != null" >
        Utype,
      </if>
      <if test="gid != null" >
        Gid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="uno != null" >
        #{uno,jdbcType=INTEGER},
      </if>
      <if test="uname != null" >
        #{uname,jdbcType=VARCHAR},
      </if>
      <if test="upassword != null" >
        #{upassword,jdbcType=VARCHAR},
      </if>
      <if test="utype != null" >
        #{utype,jdbcType=VARCHAR},
      </if>
      <if test="gid != null" >
        #{gid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.qualityevaluationsys.demo.domain.SysuserExample" resultType="java.lang.Integer" >
    select count(*) from SysUser
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update SysUser
    <set >
      <if test="record.uno != null" >
        Uno = #{record.uno,jdbcType=INTEGER},
      </if>
      <if test="record.uname != null" >
        Uname = #{record.uname,jdbcType=VARCHAR},
      </if>
      <if test="record.upassword != null" >
        Upassword = #{record.upassword,jdbcType=VARCHAR},
      </if>
      <if test="record.utype != null" >
        Utype = #{record.utype,jdbcType=VARCHAR},
      </if>
      <if test="record.gid != null" >
        Gid = #{record.gid,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update SysUser
    set Uno = #{record.uno,jdbcType=INTEGER},
      Uname = #{record.uname,jdbcType=VARCHAR},
      Upassword = #{record.upassword,jdbcType=VARCHAR},
      Utype = #{record.utype,jdbcType=VARCHAR},
      Gid = #{record.gid,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.qualityevaluationsys.demo.domain.Sysuser" >
    update SysUser
    <set >
      <if test="uname != null" >
        Uname = #{uname,jdbcType=VARCHAR},
      </if>
      <if test="upassword != null" >
        Upassword = #{upassword,jdbcType=VARCHAR},
      </if>
      <if test="utype != null" >
        Utype = #{utype,jdbcType=VARCHAR},
      </if>
      <if test="gid != null" >
        Gid = #{gid,jdbcType=INTEGER},
      </if>
    </set>
    where Uno = #{uno,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qualityevaluationsys.demo.domain.Sysuser" >
    update SysUser
    set Uname = #{uname,jdbcType=VARCHAR},
      Upassword = #{upassword,jdbcType=VARCHAR},
      Utype = #{utype,jdbcType=VARCHAR},
      Gid = #{gid,jdbcType=INTEGER}
    where Uno = #{uno,jdbcType=INTEGER}
  </update>

  <select id="getRolesByUno" parameterType="int" resultType="com.qualityevaluationsys.demo.domain.Roles">
   select uid,SysUserGroup.groupName as role from UG,SysUserGroup where uid=#{uno,jdbcType=INTEGER}   and SysUserGroup.id=UG.gid
  </select>
</mapper>